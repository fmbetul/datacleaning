setwd("/Users/macbook/Documents/DoegeLab/projects/functions/DataCleanPackage/")
set.seed(1234)
library(Seurat)
setwd("/Users/macbook/Documents/DoegeLab/projects/functions/DataCleanPackage/")
library(Signac)
library(Seurat)
library(tidyverse)
library(ggpubr)
library(here)
set.seed(1234)
load("cm001.rds")
load("/Users/macbook/Documents/DoegeLab/projects/multiome2/arc/cm001.rds")
load("/Users/macbook/Documents/DoegeLab/projects/multiome2/arc/cm001/cm001.rds")
#Rename clusters
cm001 <- RenameIdents(cm001,
'POMC/NR5A2' = 'POMC.NR5A2',
'SST/OTP' = 'SST.OTP')
cm001$celltype <- Idents(cm001)
remove.packages(datacleanning)
remove.packages(datacleaning)
remove.packages("datacleaning")
View(cm001)
devtools::install_github("fmbetul/datacleaning")
devtools::install_github("fmbetul/datacleaning")
rm(list = ls())
install.packages("processx")
install.packages("processx")
devtools::install_github("fmbetul/datacleaning")
library(datacleaning)
library(Seurat)
set.seed(1234)
load("/Users/macbook/Documents/DoegeLab/projects/multiome2/arc/cm001/cm001.rds")
#Rename clusters
cm001 <- RenameIdents(cm001,
'POMC/NR5A2' = 'POMC.NR5A2',
'SST/OTP' = 'SST.OTP')
cm001$celltype <- Idents(cm001)
DimPlot(cm001, reduction = "umap", label = T)
table(Idents(cm001))
# SST.OTP
CropCluster(cm001, ClusterNo = 2, min.x = -1, max.x = 4, max.y = -2)
# POMC
CropCluster(cm001, ClusterNo = 3, min.x = -5, max.x = 4.5, max.y = 1.4)
# POMC.NR5A2
CropCluster(cm001, ClusterNo = 1, min.x = 1.5, max.x = 12, min.y = -4, max.y = 1.4)
# Neuronal
CropCluster(cm001, ClusterNo = 4, min.x = -3.1, max.x = 5, min.y = 1.4)
# Progenitors
CropCluster(cm001, ClusterNo = 5, max.x = -3.1, min.y = 1.4)
# VLMC
CropCluster(cm001, ClusterNo = 6, max.x = -5, max.y = 1.4)
getLeftovers(cm001)
assignExtraCluster(cm001, "SST.OTP", min.x = -1, max.x = 4, max.y = -2)
validateExtraCluster(cm001)
assignExtraCluster(cm001, "POMC.NR5A2", min.x = 1.5, max.y = 1.4)
validateExtraCluster(cm001)
assignExtraCluster(cm001, ClusterName = "POMC", min.x = -5, max.x = 1.5, max.y = 1.4)
validateExtraCluster(cm001)
assignExtraCluster(cm001, ClusterName = "Neuronal", min.x = -3.1, min.y = 1.4)
validateExtraCluster(cm001)
assignExtraCluster(cm001, "Progenitors", min.y = 1.4)
validateExtraCluster(cm001)
assignExtraCluster(cm001, "VLMC")
cm001 <- getFinalClusters(cm001)
setwd("/Users/macbook/Documents/R_projects/datacleaning/")
