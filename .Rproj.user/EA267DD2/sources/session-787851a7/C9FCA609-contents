# DataCleanPkg_v1.2
# 2023/04/30

assignExtraCluster <- function(SeuData, ClusterName, min.x = -50, max.x = 50, min.y = -50, max.y = 50) {

  # Get the UMAP coordinates of each cell
  UMAP_Data <- as.data.frame(SeuData@reductions$umap@cell.embeddings)

  # Check Leftovers
  Leftovers <- get("Leftovers", envir = globalenv())
  print(paste("Number of cells in current Leftovers:", dim(Leftovers)[1], sep = " "))
  print(CheckUMAP(sample = SeuData, CheckInput = Leftovers))

  # Define the borders of the _Extra cluster
  ExtraCluster <- subset(UMAP_Data, row.names(UMAP_Data) %in% row.names(Leftovers)
                         & UMAP_Data$UMAP_1 > min.x
                         & UMAP_Data$UMAP_1 < max.x
                         & UMAP_Data$UMAP_2 > min.y
                         & UMAP_Data$UMAP_2 < max.y)

  # Visualize the _Extra cluster
  print(paste("Number of cells assigned to", ClusterName, "_Extra cluster:", dim(ExtraCluster)[1], sep = " "))
  print(CheckUMAP(sample = SeuData, CheckInput = ExtraCluster))

  # Save the _Extra cluster
  set.name <- paste0(ClusterName, "_Extra")
  assign(set.name, ExtraCluster, envir = globalenv())

  # Visualize and save NewLeftovers in the global environment
  NewLeftovers <- subset(Leftovers, !(row.names(Leftovers) %in% row.names(ExtraCluster)))
  assign("NewLeftovers", NewLeftovers, envir = globalenv()) # <-- This line is changed
  print(paste("Number of cells in NewLeftovers must be:", dim(Leftovers)[1] - dim(ExtraCluster)[1], sep = " "))
  print(paste("Number of cells in NewLeftovers is:", dim(NewLeftovers)[1], sep = " "))
  print(CheckUMAP(sample = SeuData, CheckInput = NewLeftovers))

  # look at all clusters overall
  print(DimPlot(SeuData, reduction = "umap", label  =TRUE))

  }
